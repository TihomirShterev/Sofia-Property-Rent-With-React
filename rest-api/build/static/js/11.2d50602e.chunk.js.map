{"version":3,"sources":["pages/register/index.module.css","pages/register/index.js"],"names":["module","exports","RegisterPage","props","handleChange","event","type","newState","target","value","setState","handleSubmit","a","preventDefault","state","email","password","rePassword","length","match","emailError","passwordError","rePasswordError","emptyFieldsError","fetch","method","body","JSON","stringify","headers","promise","authToken","get","document","cookie","json","response","context","logIn","id","_id","history","push","console","log","this","emailErrorMessage","passwordErrorMessage","rePasswordErrorMessage","emptyFieldsErrorMessage","className","styles","register","onSubmit","htmlFor","name","onChange","e","placeholder","error","to","loggedIn","Component","contextType","UserContext"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,SAAW,2BAA2B,IAAM,sBAAsB,MAAQ,wBAAwB,MAAQ,wBAAwB,cAAc,gC,gKCO5LC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAeRC,aAAe,SAACC,EAAOC,GACrB,IAAMC,EAAW,GAEjBA,EAASD,GAAQD,EAAMG,OAAOC,MAE9B,EAAKC,SAASH,IArBG,EAwBnBI,aAxBmB,uCAwBJ,WAAON,GAAP,2BAAAO,EAAA,6DACbP,EAAMQ,iBADO,EAOT,EAAKC,MAHPC,EAJW,EAIXA,MACAC,EALW,EAKXA,SACAC,EANW,EAMXA,WAME,EAAIF,EAAMG,SAAWH,EAAMI,MAAM,oCACnC,EAAKT,SAAS,CACZU,YAAY,IAGd,EAAKV,SAAS,CACZU,YAAY,IAIZ,EAAIJ,EAASE,QAAUF,EAASE,OAAS,EAC3C,EAAKR,SAAS,CACZW,eAAe,IAGjB,EAAKX,SAAS,CACZW,eAAe,IAIf,EAAIJ,EAAWC,QAAUD,IAAeD,EAC1C,EAAKN,SAAS,CACZY,iBAAiB,IAGnB,EAAKZ,SAAS,CACZY,iBAAiB,IAIhBP,GAAUC,GAAaC,EAK1B,EAAKP,SAAS,CACZa,kBAAkB,IALpB,EAAKb,SAAS,CACZa,kBAAkB,IA5CT,kBAsDWC,MAAM,sDAAuD,CACjFC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBb,QACAC,WACAC,eAEFY,QAAS,CACP,eAAgB,sBA9DT,cAsDLC,EAtDK,OAkELC,EAAYD,EAAQD,QAAQG,IAAI,iBACtCC,SAASC,OAAT,sBAAiCH,GAnEtB,UAqEYD,EAAQK,OArEpB,SAqELC,EArEK,QAyEErB,OAASgB,GAAad,IAAeD,GAEhD,EAAKqB,QAAQC,MAAM,CACjBvB,MAAOqB,EAASrB,MAChBwB,GAAIH,EAASI,MAEf,EAAKrC,MAAMsC,QAAQC,KAAK,MAExBC,QAAQC,IAAI,SAjFH,kDAqFXD,QAAQC,IAAI,QAAZ,MArFW,0DAxBI,sDAGjB,EAAK9B,MAAQ,CACXC,MAAO,GACPC,SAAU,GACVC,WAAY,GACZG,YAAY,EACZC,eAAe,EACfC,iBAAiB,EACjBC,kBAAkB,GAVH,E,0CAiHnB,WAAU,IAAD,SASHsB,KAAK/B,MAPPC,EAFK,EAELA,MACAC,EAHK,EAGLA,SACAC,EAJK,EAILA,WAOI6B,EAXC,EAKL1B,WAMqC,6BAA+B,KAChE2B,EAZC,EAML1B,cAM2C,iEAAmE,KAC1G2B,EAbC,EAOL1B,gBAM+C,mCAAqC,KAChF2B,EAdC,EAQL1B,iBAMiD,+BAAiC,KAEpF,OACE,eAAC,IAAD,WACE,sBAAM2B,UAAWC,IAAOC,SAAUC,SAAUR,KAAKlC,aAAjD,SACE,qCACE,mDAEA,oBAAGuC,UAAWC,IAAO,oBAArB,UACE,uBAAOG,QAAQ,QAAf,SAAuB,+BAAM,mBAAGJ,UAAU,wBAC1C,uBACE5C,KAAK,OACLiD,KAAK,QACLhB,GAAG,QACH9B,MAAOM,EACPyC,SAAU,SAACC,GAAD,OAAO,EAAKrD,aAAaqD,EAAG,UACtCC,YAAY,8BAGhB,mBAAGR,UAAWC,IAAOQ,MAArB,SACGb,IAGH,oBAAGI,UAAWC,IAAO,oBAArB,UACE,uBAAOG,QAAQ,WAAf,SAA0B,+BAAM,mBAAGJ,UAAU,oBAC7C,uBACE5C,KAAK,WACLiD,KAAK,WACLhB,GAAG,WACH9B,MAAOO,EACPwC,SAAU,SAACC,GAAD,OAAO,EAAKrD,aAAaqD,EAAG,aACtCC,YAAY,cAGhB,mBAAGR,UAAWC,IAAOQ,MAArB,SACGZ,IAGH,oBAAGG,UAAWC,IAAO,oBAArB,UACE,uBAAOG,QAAQ,aAAf,SAA4B,+BAAM,mBAAGJ,UAAU,oBAC/C,uBACE5C,KAAK,WACLiD,KAAK,aACLhB,GAAG,aACH9B,MAAOQ,EACPuC,SAAU,SAACC,GAAD,OAAO,EAAKrD,aAAaqD,EAAG,eACtCC,YAAY,cAGhB,mBAAGR,UAAWC,IAAOQ,MAArB,SACGX,IAGH,mBAAGE,UAAWC,IAAOQ,MAArB,SACGV,IAEH,wBAAQ3C,KAAK,SAAb,4BAEA,oBAAG4C,UAAWC,IAAO,eAArB,gCAEE,cAAC,IAAD,CAAMS,GAAG,cAAT,2BAKJf,KAAKR,QAAQwB,SAAW,cAAC,IAAD,CAAUD,GAAG,MAAS,Y,GAjM7BE,aAArB5D,EAeG6D,YAAcC,IAwLR9D","file":"static/js/11.2d50602e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"register_login__YQg11\",\"register\":\"register_register__3C8FF\",\"tel\":\"register_tel__wjRF5\",\"field\":\"register_field__3bDeq\",\"error\":\"register_error__i_KWa\",\"input-error\":\"register_input-error__fF98u\"};","import React, { Component } from 'react';\r\nimport Layout from '../../components/layout';\r\nimport styles from './index.module.css';\r\nimport {\r\n  Link, Redirect\r\n} from 'react-router-dom';\r\nimport UserContext from '../../Context';\r\n\r\nclass RegisterPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      rePassword: \"\",\r\n      emailError: false,\r\n      passwordError: false,\r\n      rePasswordError: false,\r\n      emptyFieldsError: false\r\n    };\r\n  }\r\n\r\n  static contextType = UserContext;\r\n\r\n  handleChange = (event, type) => {\r\n    const newState = {};\r\n    // console.log(event);\r\n    newState[type] = event.target.value;\r\n\r\n    this.setState(newState);\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault(); // so page doesn't reload\r\n\r\n    const {\r\n      email,\r\n      password,\r\n      rePassword\r\n    } = this.state;\r\n\r\n    // console.log(this.context);\r\n\r\n    // custom validations\r\n    if (0 < email.length && !email.match(/^[a-zA-Z0-9.-]{6,}@\\w+.(com|bg)$/)) {\r\n      this.setState({\r\n        emailError: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        emailError: false\r\n      });\r\n    }\r\n\r\n    if (0 < password.length && password.length < 6) {\r\n      this.setState({\r\n        passwordError: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        passwordError: false\r\n      });\r\n    }\r\n\r\n    if (0 < rePassword.length && rePassword !== password) {\r\n      this.setState({\r\n        rePasswordError: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        rePasswordError: false\r\n      });\r\n    }\r\n\r\n    if (!email || !password || !rePassword) {\r\n      this.setState({\r\n        emptyFieldsError: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        emptyFieldsError: false\r\n      });\r\n    }\r\n\r\n    // request\r\n    try {\r\n      const promise = await fetch('https://estatesbg.herokuapp.com/api/users/register', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n          rePassword\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const authToken = promise.headers.get('Authorization'); // #rest-api/index.js\r\n      document.cookie = `auth-cookie=${authToken}`; // we save the token in the cookie (#rest-api/app-config),\r\n      // and when we log in, we'll already have the cookie in DevTools/Application \r\n      const response = await promise.json();\r\n      // console.log(response);\r\n\r\n      // passwords match needed, so it doesn't log in w/o rePassword\r\n      if (response.email && authToken && rePassword === password) {\r\n        // console.log('Yay!');\r\n        this.context.logIn({\r\n          email: response.email,\r\n          id: response._id\r\n        });\r\n        this.props.history.push('/'); // if all good, we redirect to homePage\r\n      } else {\r\n        console.log('Error');\r\n      }\r\n\r\n    } catch (err) {\r\n      console.log('Error', err);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      password,\r\n      rePassword,\r\n      emailError,\r\n      passwordError,\r\n      rePasswordError,\r\n      emptyFieldsError\r\n    } = this.state;\r\n\r\n    const emailErrorMessage = emailError ? 'Please enter a valid email' : null;\r\n    const passwordErrorMessage = passwordError ? 'Please enter a valid password consisting at least 6 characters' : null;\r\n    const rePasswordErrorMessage = rePasswordError ? 'Please enter a matching password' : null;\r\n    const emptyFieldsErrorMessage = emptyFieldsError ? 'Please fill all fields above' : null;\r\n\r\n    return (\r\n      <Layout>\r\n        <form className={styles.register} onSubmit={this.handleSubmit}>\r\n          <fieldset>\r\n            <h2>Registration Form</h2>\r\n\r\n            <p className={styles[\"field field-icon\"]}>\r\n              <label htmlFor=\"email\"><span><i className=\"fas fa-envelope\"></i></span></label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={(e) => this.handleChange(e, 'email')}\r\n                placeholder=\"pesho.peshev@gmail.com\"\r\n              />\r\n            </p>\r\n            <p className={styles.error}>\r\n              {emailErrorMessage}\r\n            </p>\r\n\r\n            <p className={styles[\"field field-icon\"]}>\r\n              <label htmlFor=\"password\"><span><i className=\"fas fa-lock\"></i></span></label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={(e) => this.handleChange(e, 'password')}\r\n                placeholder=\"******\"\r\n              />\r\n            </p>\r\n            <p className={styles.error}>\r\n              {passwordErrorMessage}\r\n            </p>\r\n\r\n            <p className={styles[\"field field-icon\"]}>\r\n              <label htmlFor=\"rePassword\"><span><i className=\"fas fa-lock\"></i></span></label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"rePassword\"\r\n                id=\"rePassword\"\r\n                value={rePassword}\r\n                onChange={(e) => this.handleChange(e, 'rePassword')}\r\n                placeholder=\"******\"\r\n              />\r\n            </p>\r\n            <p className={styles.error}>\r\n              {rePasswordErrorMessage}\r\n            </p>\r\n\r\n            <p className={styles.error}>\r\n              {emptyFieldsErrorMessage}\r\n            </p>\r\n            <button type=\"submit\">Create Account</button>\r\n\r\n            <p className={styles[\"text-center\"]}>\r\n              Already registered?\r\n              <Link to=\"/user/login\">Login</Link>\r\n            </p>\r\n\r\n          </fieldset>\r\n        </form>\r\n        { this.context.loggedIn ? <Redirect to=\"/\" /> : null}\r\n      </Layout>\r\n    );\r\n  };\r\n}\r\n\r\nexport default RegisterPage;"],"sourceRoot":""}